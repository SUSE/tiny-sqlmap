<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="dist" name="tiny-sqlmap">
  <!-- Properties -->
  <property name="debuglevel" value="source,lines,vars" />

  <!-- Directories -->
  <property name="dir-src-main" value="src/main/java" />
  <property name="dir-src-test" value="src/test/java" />
  <property name="dir-lib" value="lib" />
  <property name="dir-bin" value="bin" />
  <property name="dir-dist" value="dist" />

  <!-- Load properties from file -->
  <property file="${basedir}/buildconf/build.properties" />

  <!-- Classpath -->
  <path id="classpath-build">
    <fileset dir="${dir-lib}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <!-- Clean -->
  <target name="clean">
    <!--<delete dir="lib"/>-->
    <delete dir="${dir-bin}" />
    <delete dir="${dir-dist}" />
  </target>

  <!-- Init -->
  <target name="init">
    <mkdir dir="${dir-bin}" />
    <copy includeemptydirs="false" todir="${dir-bin}">
      <fileset dir="${dir-src-main}">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>

  <!-- Build the code -->
  <target name="build" depends="init,-ivy-retrieve">
    <javac debug="true" debuglevel="${debuglevel}" srcdir="${dir-src-main}" destdir="${dir-bin}" includeantruntime="false">
      <exclude name="**/test/**" />
      <classpath refid="classpath-build" />
    </javac>
  </target>

  <!-- Build the tests -->
  <target name="build-tests" depends="build">
    <copy includeemptydirs="false" todir="${dir-bin}">
      <fileset dir="${dir-src-test}">
        <exclude name="**/*.java" />
      </fileset>
    </copy>
    <javac debug="true" debuglevel="${debuglevel}" srcdir="${dir-src-test}" destdir="${dir-bin}" includeantruntime="false">
      <include name="**/test/*.java" />
      <classpath refid="classpath-build" />
    </javac>
  </target>

  <!-- Create jar file, exclude tests  -->
  <target name="dist" depends="build">
    <mkdir dir="${dir-dist}" />
    <jar destfile="${dir-dist}/${ant.project.name}-${version}.jar" basedir="${dir-bin}">
      <exclude name="**/test/**" />
    </jar>
  </target>

  <!-- Create a tar.bz2 archive containing the sources -->
  <target name="src">
    <mkdir dir="${dir-dist}" />
    <tar destfile="${dir-dist}/${ant.project.name}-${version}.tar.bz2" compression="bzip2">
      <tarfileset dir="${basedir}" prefix="${ant.project.name}-${version}">
        <include name="src/**" />
        <include name="lib/**" />
        <include name="buildconf/**" />
        <include name="build.xml" />
        <include name="LICENSE" />
        <include name="README" />
      </tarfileset>
    </tar>
  </target>

  <target name="-check-for-ivy">
        <available property="have.ivy" resource="fr/jayasoft/ivy/ant/antlib.xml"/>
    </target>

  <target name="-ivy-define" depends="-check-for-ivy" unless="have.ivy">
  <taskdef resource="fr/jayasoft/ivy/ant/antlib.xml" uri="antlib:fr.jayasoft.ivy.ant">
    <classpath>
        <fileset dir="${ivy.home}">
            <include name="ivy*.jar"/>
            <include name="lib/*.jar"/>
        </fileset>
    </classpath>
  </taskdef>
  </target>

  <target name="-ivy-retrieve" depends="-ivy-define" xmlns:ivy="antlib:fr.jayasoft.ivy.ant">
    <ivy:configure file="ivy-settings.xml" />
    <ivy:resolve/> <!-- Tell Ivy to resolve dependencies -->
    <ivy:retrieve/> <!-- Load dependencies to the project -->
    <pathconvert property="ivy.classpath.computed" dirsep="/" pathsep=":">
        <path>
            <fileset dir="lib" includes="*.jar"/>
        </path>
        <map from="${basedir}${file.separator}" to=""/>
    </pathconvert>

    <propertyfile file="nbproject/project.properties">
        <entry operation="=" key="ivy.classpath" value="${ivy.classpath.computed}"/>
    </propertyfile>
  </target>

</project>

